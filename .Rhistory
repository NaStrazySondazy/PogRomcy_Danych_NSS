options(OutDec= ",");
library(ggplot2)
# Generate data
sonNSS<-data.frame(L=1:100, Poparcie=c(rep("TAK", 5), rep("NIE", 95)))
qplot(factor(Poparcie), data=sonNSS, geom="bar", fill=factor(Poparcie))+
guides(fill=FALSE)+
ylab("Procent") +
ggtitle("Czy wiesz jak powstają sondaże?") +
theme(axis.title.x=element_blank())+
scale_fill_manual(values=c("red3", "green3"))+
theme(axis.text.x = element_text(face="bold", color = "black", size=15),
plot.title = element_text(lineheight=.8, face="bold", size=20))
# sposob czytania arkuszy Google zaporzyczony ze strony:
# http://blog.revolutionanalytics.com/2014/06/reading-data-from-the-new-version-of-google-spreadsheets.html
# setwd( getwd() )
# Wgranie pakietów
options(OutDec= ",");
library(knitr);
library(XML);
library(RCurl)
# Przygotowanie funkcji czytającej dane
cleanGoogleTable <- function(dat, table=1, skip=0, ncols=NA, nrows=-1, header=TRUE, dropFirstCol=NA){
if(!is.data.frame(dat)){
dat <- dat[[table]]
}
if(is.na(dropFirstCol)) {
firstCol <- na.omit(dat[[1]])
if(all(firstCol == ".") || all(firstCol== as.character(seq_along(firstCol)))) {
dat <- dat[, -1]
}
} else if(dropFirstCol) {
dat <- dat[, -1]
}
if(skip > 0){
dat <- dat[-seq_len(skip), ]
}
if(nrow(dat) == 1) return(dat)
if(nrow(dat) >= 2){
if(all(is.na(dat[2, ]))) dat <- dat[-2, ]
}
if(header && nrow(dat) > 1){
header <- as.character(dat[1, ])
names(dat) <- header
dat <- dat[-1, ]
}
# Keep only desired columns
if(!is.na(ncols)){
ncols <- min(ncols, ncol(dat))
dat <- dat[, seq_len(ncols)]
}
# Keep only desired rows
if(nrows > 0){
nrows <- min(nrows, nrow(dat))
dat <- dat[seq_len(nrows), ]
}
# Rename rows
rownames(dat) <- seq_len(nrow(dat))
dat
}
# Przygotowanie funkcji czytającej dane
readGoogleSheet <- function(url, na.string="", header=TRUE){
stopifnot(require(XML))
# Suppress warnings because Google docs seems to have incomplete final line
suppressWarnings({
# doc <- paste(readLines(url), collapse=" ")
doc <- getURL(url, ssl.verifypeer=0L, followlocation=1L) # moje wlasne usprawnienie :D
})
if(nchar(doc) == 0) stop("No content found")
htmlTable <- gsub("^.*?(<table.*</table).*$", "\\1>", doc)
ret <- readHTMLTable(htmlTable, header=header, stringsAsFactors=FALSE, as.data.frame=TRUE, encoding="UTF-8")
lapply(ret, function(x){ x[ x == na.string] <- NA; x})
}
# Wgrywanie  danych z google dysku
gdoc <- "https://docs.google.com/spreadsheets/d/1iSt2ZD9F8DhEh8UonnYqZ71wG7gqm5MSlpiZM2vL-Gw/pubhtml?gid=1189066294&single=true"
elem <- readGoogleSheet(gdoc)
m <- cleanGoogleTable(elem, table=1)
m<-m[,colnames(m)!="X"]
poparcie_dla_P<-addmargins(table( m$Miasto_wies, m$Glosowanie ) )
colnames( poparcie_dla_P)<-c("Nie pójdę na wybory", "Nie", "Tak", "RAZEM")
row.names( poparcie_dla_P)<-c("Miasto", "Wieś", "RAZEM")
kable( poparcie_dla_P, format = "markdown")
kable( m, format = "markdown")
