sum(sample(m$Glosowanie, 2)==-1)/2
sum(sample(m$Glosowanie, 2)==-1)/2*100
sum(sample(m$Glosowanie, 2)==-1)/2*100
sum(sample(m$Glosowanie, 2)==-1)/2*100
paste(sum(sample(m$Glosowanie, 2)==-1)/2*100, "%", sep="")
p2<-c();
for (i in 1:1000){
p2<-paste(sum(sample(m$Glosowanie, 2)==-1)/2*100, "%", sep="")
}
table(p2)
p2<-c();
for (i in 1:1000){
p2[i]<-paste(sum(sample(m$Glosowanie, 2)==-1)/2*100, "%", sep="")
}
table(p2)
1:length(p2)
p2 data.frame( Lp=c(1:length(p2)), p2);
p2<-data.frame( Lp=c(1:length(p2)), p2);
p2<-c();
for (i in 1:1000){
p2[i]<-paste(sum(sample(m$Glosowanie, 2)==-1)/2*100, "%", sep="")
}
p2<-data.frame( Lp=c(1:length(p2)), absencja=p2);
p2 <- transform(p2, # przygotowanie danych
p2.kolejnosc=factor(
absencja, levels=c("0%", "50%", "100%"), order=TRUE));
p2.Tab <- as.data.frame(table(p2$absencja));
p2<-c();
for (i in 1:1000){
p2[i]<-paste(sum(sample(m$Glosowanie, 2)==-1)/2*100, "%", sep="")
}
p2<-data.frame( Lp=c(1:length(p2)), absencja=p2);
p2 <- transform(p2, # przygotowanie danych
p2.kolejnosc=factor(
absencja, levels=c("0%", "50%", "100%"), order=TRUE));
p2.Tab <- as.data.frame(table(p2$absencja));
ggplot(p2, aes(p2.kolejnosc))+
geom_bar( fill=c("red2","deepskyblue", "yellowgreen"))+
ylab("Procent")+
xlab("Poziom absencji wyborczej w próbie")+
geom_text(data=p2.Tab,aes(x=Var1,y=Freq,label=Freq),vjust=5, size=5, face="bold")+
theme(axis.text.x = element_text(face="bold", color = "black", size=15));
ggplot(p2, aes(p2.kolejnosc))+
geom_bar( fill=c("firebrick1","deepskyblue", "yellowgreen"))+
ylab("Procent")+
xlab("Poziom absencji wyborczej w próbie")+
geom_text(data=p2.Tab,aes(x=Var1,y=Freq,label=Freq),vjust=5, size=5, face="bold")+
theme(axis.text.x = element_text(face="bold", color = "black", size=15));
ggplot(p2, aes(p2.kolejnosc))+
geom_bar( fill=c("firebrick1","ightskyblue", "yellowgreen"))+
ylab("Procent")+
xlab("Poziom absencji wyborczej w próbie")+
geom_text(data=p2.Tab,aes(x=Var1,y=Freq,label=Freq),vjust=5, size=5, face="bold")+
theme(axis.text.x = element_text(face="bold", color = "black", size=15));
ggplot(p2, aes(p2.kolejnosc))+
geom_bar( fill=c("firebrick1","lightskyblue", "yellowgreen"))+
ylab("Procent")+
xlab("Poziom absencji wyborczej w próbie")+
geom_text(data=p2.Tab,aes(x=Var1,y=Freq,label=Freq),vjust=5, size=5, face="bold")+
theme(axis.text.x = element_text(face="bold", color = "black", size=15));
ggplot(p2, aes(p2.kolejnosc))+
geom_bar( fill=c("firebrick1","lightskyblue", "greenyellow"))+
ylab("Procent")+
xlab("Poziom absencji wyborczej w próbie")+
geom_text(data=p2.Tab,aes(x=Var1,y=Freq,label=Freq),vjust=5, size=5, face="bold")+
theme(axis.text.x = element_text(face="bold", color = "black", size=15));
ggplot(p2, aes(p2.kolejnosc))+
geom_bar( fill=c("firebrick1","lightskyblue", "darkolivegreen1"))+
ylab("Procent")+
xlab("Poziom absencji wyborczej w próbie")+
geom_text(data=p2.Tab,aes(x=Var1,y=Freq,label=Freq),vjust=5, size=5, face="bold")+
theme(axis.text.x = element_text(face="bold", color = "black", size=15));
p2.Tab
ggplot(p2, aes(p2.kolejnosc))+
geom_bar( fill=c("firebrick1","lightskyblue", "darkolivegreen1"))+
ylab("Liczba prób")+
xlab("Poziom absencji wyborczej w próbie")+
geom_text(data=p2.Tab,aes(x=Var1,y=Freq,label=Freq),vjust=5, size=5, face="bold")+
theme(axis.text.x = element_text(face="bold", color = "black", size=15));
ggplot(permutacje.rozklad, aes(per.roz.kolejnosc))+
geom_bar( fill=c("red2","deepskyblue", "yellowgreen"))+
ylab("Liczba prób")+
xlab("Poziom absencji wyborczej w próbie")+
geom_text(data=permutacje.rozklad.Tab,aes(x=Var1,y=Freq,label=Freq),vjust=5, size=5, face="bold")+
theme(axis.text.x = element_text(face="bold", color = "black", size=15));
ggplot(permutacje.rozklad, aes(per.roz.kolejnosc))+
geom_bar( fill=c("red2","deepskyblue", "yellowgreen"), colour="black")+
ylab("Liczba prób")+
xlab("Poziom absencji wyborczej w próbie")+
geom_text(data=permutacje.rozklad.Tab,aes(x=Var1,y=Freq,label=Freq),vjust=5, size=5, face="bold")+
theme(axis.text.x = element_text(face="bold", color = "black", size=15));
ggplot(p2, aes(p2.kolejnosc))+
geom_bar( fill=c("firebrick1","lightskyblue", "darkolivegreen1"))+
ylab("Liczba prób")+
xlab("Poziom absencji wyborczej w próbie")+
geom_text(data=p2.Tab,aes(x=Var1,y=Freq,label=Freq),vjust=5, size=5, face="bold")+
theme(axis.text.x = element_text(face="bold", color = "black", size=15));
get.wd()
getwd()
p2.Tab
p2.Tab$Freq[p2.Tab$Var1=="0%"]
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
p6.2
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
p6.2
ggplot(p6.2, aes(x = factor(p6.2), y = Freq)) +
geom_bar(stat="identity", fill="white", colour="black")+
scale_x_discrete(labels=c("0","1/6","2/6","3/6", "4/6", "5/6", "1"))
ggplot(p6.2, aes(x = factor(p6.2), y = Freq)) +
geom_bar(stat="identity", fill="white", colour="black")+
scale_x_discrete(labels=c("0","1/6","2/6","3/6", "4/6", "5/6", "1"))+
theme(axis.text.x = element_text(face="bold", color = "black", size=15))
ggplot(p6.2, aes(x = factor(p6.2), y = Freq)) +
geom_bar(stat="identity", fill="white", colour="black", fill="grey50")+
scale_x_discrete(labels=c("0","1/6","2/6","3/6", "4/6", "5/6", "1"))+
theme(axis.text.x = element_text(face="bold", color = "black", size=15))+
xlab("Poparcie w próbie")+
ylab("Liczba prób")
ggplot(p6.2, aes(x = factor(p6.2), y = Freq)) +
geom_bar(stat="identity", fill="grey50", colour="black")+
scale_x_discrete(labels=c("0","1/6","2/6","3/6", "4/6", "5/6", "1"))+
theme(axis.text.x = element_text(face="bold", color = "black", size=15))+
xlab("Poparcie w próbie")+
ylab("Liczba prób")
ggplot(p6.2, aes(x = factor(p6.2), y = Freq)) +
geom_bar(stat="identity", fill="grey50", colour="black")+
scale_x_discrete(labels=c("0","1/6","2/6","3/6", "4/6", "5/6", "1"))+
theme(axis.text.x = element_text(face="bold", color = "black", size=15))+
xlab("Poparcie w próbie")+
ylab("Liczba prób")+
geom_text(data=p6.2, aes(x = factor(p6.2), y = Freq, label=Freq) ,vjust=5, size=5, face="bold")
ggplot(p6.2, aes(x = factor(p6.2), y = Freq)) +
geom_bar(stat="identity", fill="grey50", colour="black")+
scale_x_discrete(labels=c("0","1/6","2/6","3/6", "4/6", "5/6", "1"))+
theme(axis.text.x = element_text(face="bold", color = "black", size=15))+
xlab("Poparcie w próbie")+
ylab("Liczba prób")+
geom_text(data=p6.2, aes(x = factor(p6.2), y = Freq, label=Freq) ,vjust=0, size=5, face="bold")
ggplot(p6.2, aes(x = factor(p6.2), y = Freq)) +
geom_bar(stat="identity", fill="grey50", colour="black")+
scale_x_discrete(labels=c("0","1/6","2/6","3/6", "4/6", "5/6", "1"))+
theme(axis.text.x = element_text(face="bold", color = "black", size=15))+
xlab("Poparcie w próbie")+
ylab("Liczba prób")+
geom_text(data=p6.2, aes(x = factor(p6.2), y = Freq, label=Freq) ,vjust=0, size=2, face="bold")
ggplot(p6.2, aes(x = factor(p6.2), y = Freq)) +
geom_bar(stat="identity", fill="grey50", colour="black")+
scale_x_discrete(labels=c("0","1/6","2/6","3/6", "4/6", "5/6", "1"))+
theme(axis.text.x = element_text(face="bold", color = "black", size=15))+
xlab("Poparcie w próbie")+
ylab("Liczba prób")+
geom_text(data=p6.2, aes(x = factor(p6.2), y = Freq, label=Freq) ,vjust=0, size=3, face="bold")
ggplot(p6.2, aes(x = factor(p6.2), y = Freq)) +
geom_bar(stat="identity", fill="grey50", colour="black")+
scale_x_discrete(labels=c("0","1/6","2/6","3/6", "4/6", "5/6", "1"))+
theme(axis.text.x = element_text(face="bold", color = "black", size=15))+
xlab("Poparcie w próbie")+
ylab("Liczba prób")+
geom_text(data=p6.2, aes(x = factor(p6.2), y = Freq, label=Freq) ,vjust=0, size=4, face="bold")
ggplot(p6.2, aes(x = factor(p6.2), y = Freq)) +
geom_bar(stat="identity", fill="lightskyblue", colour="black")+
scale_x_discrete(labels=c("0","1/6","2/6","3/6", "4/6", "5/6", "1"))+
theme(axis.text.x = element_text(face="bold", color = "black", size=15))+
xlab("Poparcie w próbie")+
ylab("Liczba prób")+
geom_text(data=p6.2, aes(x = factor(p6.2), y = Freq, label=Freq) ,vjust=0, size=4, face="bold")
ggplot(p6.2, aes(x = factor(p6.2), y = Freq))
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
######################################### ANIMACJA
oopt = ani.options(interval = 0.2, nmax = 10) # ANIMACJA
## use a loop to create images one by one
# 0:ani.options("nmax")/10
for (i in 2:19) {
proba<-c()
for (j in 1:1000){
proba[j]<-round(sum(sample(x = m$Glosowanie, size = i, replace =F ) ==1)/i, 3)
}
hist(proba, xlim= c(0,1))
abline(v=7/20, col="red")
}
ani.options(oopt)
library(animation);
library(ggplot2);
options(OutDec= ",");
library(knitr);
library(XML);
library(RCurl)
# Przygotowanie funkcji czytającej dane
cleanGoogleTable <- function(dat, table=1, skip=0, ncols=NA, nrows=-1, header=TRUE, dropFirstCol=NA){
if(!is.data.frame(dat)){
dat <- dat[[table]]
}
if(is.na(dropFirstCol)) {
firstCol <- na.omit(dat[[1]])
if(all(firstCol == ".") || all(firstCol== as.character(seq_along(firstCol)))) {
dat <- dat[, -1]
}
} else if(dropFirstCol) {
dat <- dat[, -1]
}
if(skip > 0){
dat <- dat[-seq_len(skip), ]
}
if(nrow(dat) == 1) return(dat)
if(nrow(dat) >= 2){
if(all(is.na(dat[2, ]))) dat <- dat[-2, ]
}
if(header && nrow(dat) > 1){
header <- as.character(dat[1, ])
names(dat) <- header
dat <- dat[-1, ]
}
# Keep only desired columns
if(!is.na(ncols)){
ncols <- min(ncols, ncol(dat))
dat <- dat[, seq_len(ncols)]
}
# Keep only desired rows
if(nrows > 0){
nrows <- min(nrows, nrow(dat))
dat <- dat[seq_len(nrows), ]
}
# Rename rows
rownames(dat) <- seq_len(nrow(dat))
dat
}
# Przygotowanie funkcji czytającej dane
readGoogleSheet <- function(url, na.string="", header=TRUE){
stopifnot(require(XML))
# Suppress warnings because Google docs seems to have incomplete final line
suppressWarnings({
# doc <- paste(readLines(url), collapse=" ")
doc <- getURL(url, ssl.verifypeer=0L, followlocation=1L) # moje wlasne usprawnienie :D
})
if(nchar(doc) == 0) stop("No content found")
htmlTable <- gsub("^.*?(<table.*</table).*$", "\\1>", doc)
ret <- readHTMLTable(htmlTable, header=header, stringsAsFactors=FALSE, as.data.frame=TRUE, encoding="UTF-8")
lapply(ret, function(x){ x[ x == na.string] <- NA; x})
}
# Wgrywanie  danych z google dysku
gdoc <- "https://docs.google.com/spreadsheets/d/1iSt2ZD9F8DhEh8UonnYqZ71wG7gqm5MSlpiZM2vL-Gw/pubhtml?gid=1189066294&single=true"
elem <- readGoogleSheet(gdoc)
m <- cleanGoogleTable(elem, table=1)
m<-m[,colnames(m)!="X"]
######################################### ANIMACJA
oopt = ani.options(interval = 0.2, nmax = 10) # ANIMACJA
## use a loop to create images one by one
# 0:ani.options("nmax")/10
for (i in 2:19) {
proba<-c()
for (j in 1:1000){
proba[j]<-round(sum(sample(x = m$Glosowanie, size = i, replace =F ) ==1)/i, 3)
}
hist(proba, xlim= c(0,1))
abline(v=7/20, col="red")
}
ani.options(oopt)
getwd()
data.frame(table(1:10))
library(knitr)
>>>>>>> 6e2aa5d84a0d41796f81352c1b23ec1fdd4d966d
getwd()
realizacja<-c()
for (i in 0:6) {
realizacja[i+1]<-prod(12:(12-5+i))^(i<6)*prod(8:(9-i))^(i>0)*choose(6,i)
}
realizacja
realizacja<-list()
for (i in 1:6){
realizacja_wies<-matrix(0,3,2)
realizacja_wies[,1]<-c(0,1,2*(i>1))/i
realizacja_wies[1,2]<-prod(6:(7-i))* prod(12:(12-5+i))^(i<6)*choose(6,i)
realizacja_wies[2,2]<-prod(6:(8-i))^(i>1)*2*choose(i,1) * prod(12:(12-5+i))^(i<6)*choose(6,i)
realizacja_wies[3,2]<-prod(6:(9-i))^(i>2)*2*choose(i,2) * prod(12:(12-5+i))^(i<6)*choose(6,i)
realizacja[[i]]<-realizacja_wies
}
lapply(realizacja, FUN=function(x){ sum(x[,2])})
realizacja
realizacja<-do.call(rbind , realizacja)
realizacja<-aggregate( x =realizacja[,2], by = list(realizacja[,1]), sum  )
realizacja$procent<-realizacja$x/ sum(realizacja$x)
realizacja
realizacja<-c()
for (i in 0:6) {
realizacja[i+1]<-prod(12:(12-5+i))^(i<6)*prod(8:(9-i))^(i>0)*choose(6,i)
}
realizacja
realizacja
rbind(0:6,realizacja)
cbind(0:6,realizacja)
prop.table(realizacja)
data.frame( realizacja, prop.table(realizacja))
addmargins( realizacja, prop.table(realizacja),1)
addmargins( cbind(realizacja, prop.table(realizacja)),1)
cbind(realizacja, prop.table(realizacja))
addmargins( cbind(realizacja, prop.table(realizacja)))
addmargins( cbind(realizacja, procent=prop.table(realizacja)))
cbind(realizacja, procent=prop.table(realizacja))
addmargins(realizacja)
realizacja
addmargins(realizacja)
addmargins(as.matrix(realizacja))
as.matrix(realizacja)
addmargins(as.matrix(realizacja),1)
prop.table(realizacja)
addmargins(as.matrix(prop.table(realizacja)),1)
round(addmargins(as.matrix(prop.table(realizacja)),1),3)
round(addmargins(as.matrix(prop.table(realizacja)),1),3)*100
round(addmargins(as.matrix(prop.table(realizacja)),1),4)*100
data.frame(addmargins(as.matrix(realizacja),1),round(addmargins(as.matrix(prop.table(realizacja)),1),4)*100)
realizacja<-data.frame(addmargins(as.matrix(realizacja),1),
round(addmargins(as.matrix(prop.table(realizacja)),1),4)*100);
realizacja<-c()
for (i in 0:6) {
realizacja[i+1]<-prod(12:(12-5+i))^(i<6)*prod(8:(9-i))^(i>0)*choose(6,i)
}
realizacja<-data.frame(0:6,addmargins(as.matrix(realizacja),1),
round(addmargins(as.matrix(prop.table(realizacja)),1),4)*100);
realizacja<-c()
for (i in 0:6) {
realizacja[i+1]<-prod(12:(12-5+i))^(i<6)*prod(8:(9-i))^(i>0)*choose(6,i)
}
realizacja<-data.frame(addmargins(as.matrix(realizacja),1),
round(addmargins(as.matrix(prop.table(realizacja)),1),4)*100);
realizacja
c(0:6,"Razem")
realizacja<-as.data.frame(c(0:6,"Razem"), realizacja))
realizacja<-as.data.frame(c(0:6,"Razem"), realizacja)
as.data.frame(c(0:6,"Razem"), realizacja)
as.data.frame(c(0:6,"Razem"), realizacja))
data.frame(c(0:6,"Razem"), realizacja)
data.frame(c(0:6,"Razem"), realizacja)
realizacja<-data.frame(c(0:6,"Razem"), realizacja)
colnames( realizacja)<-c("Liczba dostępnych respondentów", "Liczba prób", "Procent prób")
kable( realizacja)
library(knitr)
kable( realizacja)
realizacja<-list()
for (i in 1:6){
realizacja_wies<-matrix(0,3,2)
realizacja_wies[,1]<-c(0,1,2*(i>1))/i
realizacja_wies[1,2]<-prod(6:(7-i))* prod(12:(12-5+i))^(i<6)*choose(6,i)
realizacja_wies[2,2]<-prod(6:(8-i))^(i>1)*2*choose(i,1) * prod(12:(12-5+i))^(i<6)*choose(6,i)
realizacja_wies[3,2]<-prod(6:(9-i))^(i>2)*2*choose(i,2) * prod(12:(12-5+i))^(i<6)*choose(6,i)
realizacja[[i]]<-realizacja_wies
}
realizacja<-do.call(rbind , realizacja)
realizacja<-aggregate( x =realizacja[,2], by = list(realizacja[,1]), sum  )
realizacja$procent<-realizacja$x/ sum(realizacja$x)
realizacja
realizacja<-list()
for (i in 1:6){
realizacja_wies<-matrix(0,3,2)
realizacja_wies[,1]<-c(0,1,2*(i>1))/i
realizacja_wies[1,2]<-prod(6:(7-i))* prod(12:(12-5+i))^(i<6)*choose(6,i)
realizacja_wies[2,2]<-prod(6:(8-i))^(i>1)*2*choose(i,1) * prod(12:(12-5+i))^(i<6)*choose(6,i)
realizacja_wies[3,2]<-prod(6:(9-i))^(i>2)*2*choose(i,2) * prod(12:(12-5+i))^(i<6)*choose(6,i)
realizacja[[i]]<-realizacja_wies
}
#lapply(realizacja, FUN=function(x){ sum(x[,2])})
realizacja<-do.call(rbind , realizacja)
realizacja<-aggregate( x =realizacja[,2], by = list(realizacja[,1]), sum  )
realizacja$procent<-realizacja$x/ sum(realizacja$x)
round(realizacja$Group.1,4)*100
realizacja$procent<-round(realizacja$procent,4)*100;
realizacja
colSums(realizacja[,2:3]
]
colSums(realizacja[,2:3])
realizacja
colSums(realizacja)
colSums(realizacja$x)
colSums(realizacja$x)
sum(realizacja$x)
sum(realizacja$Group.1);
sum(realizacja$x);
sum(realizacja$procent);
realizacja<-list()
for (i in 1:6){
realizacja_wies<-matrix(0,3,2)
realizacja_wies[,1]<-c(0,1,2*(i>1))/i
realizacja_wies[1,2]<-prod(6:(7-i))* prod(12:(12-5+i))^(i<6)*choose(6,i)
realizacja_wies[2,2]<-prod(6:(8-i))^(i>1)*2*choose(i,1) * prod(12:(12-5+i))^(i<6)*choose(6,i)
realizacja_wies[3,2]<-prod(6:(9-i))^(i>2)*2*choose(i,2) * prod(12:(12-5+i))^(i<6)*choose(6,i)
realizacja[[i]]<-realizacja_wies
}
#lapply(realizacja, FUN=function(x){ sum(x[,2])})
realizacja<-do.call(rbind , realizacja)
realizacja<-aggregate( x =realizacja[,2], by = list(realizacja[,1]), sum  )
as.data.frame(realizacja)
realizacja$procent<-realizacja$x/ sum(realizacja$x)
as.data.frame(realizacja)
round(realizacja$Group.1,4)*100
c(round(realizacja$Group.1,4)*100, "Razem")
c(round(realizacja$Group.1,4)*100, "Razem")
c(realizacja$x,sum(realizacja$))
c(realizacja$x,sum(realizacja$))
c(realizacja$x,sum(realizacja$x))
c( round(realizacja$procent,4)*100, 100.00)
realizacja<-list()
for (i in 1:6){
realizacja_wies<-matrix(0,3,2)
realizacja_wies[,1]<-c(0,1,2*(i>1))/i
realizacja_wies[1,2]<-prod(6:(7-i))* prod(12:(12-5+i))^(i<6)*choose(6,i)
realizacja_wies[2,2]<-prod(6:(8-i))^(i>1)*2*choose(i,1) * prod(12:(12-5+i))^(i<6)*choose(6,i)
realizacja_wies[3,2]<-prod(6:(9-i))^(i>2)*2*choose(i,2) * prod(12:(12-5+i))^(i<6)*choose(6,i)
realizacja[[i]]<-realizacja_wies
}
#lapply(realizacja, FUN=function(x){ sum(x[,2])})
realizacja<-do.call(rbind , realizacja)
realizacja<-aggregate( x =realizacja[,2], by = list(realizacja[,1]), sum  )
realizacja$procent<-realizacja$x/ sum(realizacja$x)
realizacja<-as.data.frame(realizacja)
realizacja<-data.frame(c(round(realizacja$Group.1,4)*100, "Razem"),
c(realizacja$x,sum(realizacja$x)),
c( round(realizacja$procent,4)*100, 100.00))
realizacja
colnames(realizacja)<-c("Poparcie w próbie", "Liczba prób", "Procent prób")
kable( realizacja)
realizacja<-list()
for (i in 1:6){
realizacja_wies<-matrix(0,3,2)
realizacja_wies[,1]<-c(0,1,2*(i>1))/i
realizacja_wies[1,2]<-prod(6:(7-i))* prod(12:(12-5+i))^(i<6)*choose(6,i)
realizacja_wies[2,2]<-prod(6:(8-i))^(i>1)*2*choose(i,1) * prod(12:(12-5+i))^(i<6)*choose(6,i)
realizacja_wies[3,2]<-prod(6:(9-i))^(i>2)*2*choose(i,2) * prod(12:(12-5+i))^(i<6)*choose(6,i)
realizacja[[i]]<-realizacja_wies
}
#lapply(realizacja, FUN=function(x){ sum(x[,2])})
realizacja<-do.call(rbind , realizacja)
realizacja<-aggregate( x =realizacja[,2], by = list(realizacja[,1]), sum  )
realizacja$procent<-realizacja$x/ sum(realizacja$x);
realizacja$x
realizacja$Group.1
realizacja_obliczenia<-data.frame( poparcie.x=realizacja$Group.1, liczba.prob=realizacja$x)
realizacja_obliczenia
realizacja_obliczenia$poparcie.x*realizacja_obliczenia$liczba.prob/ sum(realizacja_obliczenia$liczba.prob)
sum(realizacja_obliczenia$poparcie.x*realizacja_obliczenia$liczba.prob)/ sum(realizacja_obliczenia$liczba.prob)
realizacja
realizacja<-list()
for (i in 1:6){
realizacja_wies<-matrix(0,3,2)
realizacja_wies[,1]<-c(0,1,2*(i>1))/i
realizacja_wies[1,2]<-prod(6:(7-i))* prod(12:(12-5+i))^(i<6)*choose(6,i)
realizacja_wies[2,2]<-prod(6:(8-i))^(i>1)*2*choose(i,1) * prod(12:(12-5+i))^(i<6)*choose(6,i)
realizacja_wies[3,2]<-prod(6:(9-i))^(i>2)*2*choose(i,2) * prod(12:(12-5+i))^(i<6)*choose(6,i)
realizacja[[i]]<-realizacja_wies
}
#lapply(realizacja, FUN=function(x){ sum(x[,2])})
realizacja<-do.call(rbind , realizacja)
realizacja<-aggregate( x =realizacja[,2], by = list(realizacja[,1]), sum  )
realizacja$procent<-realizacja$x/ sum(realizacja$x);
realizacja_obliczenia<-data.frame( poparcie.x=realizacja$Group.1, liczba.prob=realizacja$x)
realizacja<-as.data.frame(realizacja)
realizacja<-data.frame(c(round(realizacja$Group.1,4)*100, "Razem"),
c(realizacja$x,sum(realizacja$x)),
c( round(realizacja$procent,4)*100, 100.00))
realizacja
realizacja<-list()
for (i in 1:6){
realizacja_wies<-matrix(0,3,2)
realizacja_wies[,1]<-c(0,1,2*(i>1))/i
realizacja_wies[1,2]<-prod(6:(7-i))* prod(12:(12-5+i))^(i<6)*choose(6,i)
realizacja_wies[2,2]<-prod(6:(8-i))^(i>1)*2*choose(i,1) * prod(12:(12-5+i))^(i<6)*choose(6,i)
realizacja_wies[3,2]<-prod(6:(9-i))^(i>2)*2*choose(i,2) * prod(12:(12-5+i))^(i<6)*choose(6,i)
realizacja[[i]]<-realizacja_wies
}
#lapply(realizacja, FUN=function(x){ sum(x[,2])})
realizacja<-do.call(rbind , realizacja)
realizacja<-aggregate( x =realizacja[,2], by = list(realizacja[,1]), sum  )
realizacja$procent<-realizacja$x/ sum(realizacja$x);
realizacja_obliczenia<-data.frame( poparcie.x=realizacja$Group.1, liczba.prob=realizacja$x)
realizacja<-as.data.frame(realizacja)
realizacja<-data.frame(c(round(realizacja$Group.1,4)*100, "Razem"),
c(realizacja$x,sum(realizacja$x)),
c( round(realizacja$procent,4)*100, 100.00))
colnames(realizacja)<-c("Poparcie w próbie", "Liczba prób", "Procent prób")
kable( realizacja)
realizacja[10,2]
print(x, digits = 16)
print(0.11111111111111111111111111113, digits = 16)
print(0.10000000000000000000000, digits = 16)
print(0.10000000500000000000000, digits = 16)
print(99999999999999999999999999999999999, digits = 16)
print(99999999999999999, digits = 16)
print(9999999999999999, digits = 16)
print(999999999999999, digits = 16)
getwd()
getwd
getwd()
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
n=6
kmin<-(n-13)*(n>12)
kmax<-n*(n<8)+7*(n>7)
prawdopo<-matrix(0,length( kmin:kmax),3)
#rownames(prawdopo)<-kmin:kmax/n
rownames(prawdopo)<-paste(round(kmin:kmax/n,3)*100, "% (", paste(0:6, "/", 6 ,")", sep=""), sep="")
prawdopo[,1]<-kmin:kmax/n
mianownik<- choose(20,n)
for (p in kmin:kmax){
prawdopo[which(kmin:kmax==p), 2]<-(choose(7,p)*choose(13,n-p))/mianownik
prawdopo[which(kmin:kmax==p), 3]<-prawdopo[which(kmin:kmax==p), 2]*prod(20:(20-5))
}
par(mfrow=c(1,1))
rozklad.p6<-barplot( prawdopo[,3], las=1, ylim=c(0,1.2*10^7) )
rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col = "grey90")
abline(h=seq(0,10*10^6,2*10^6), col="grey100");
abline(v=seq(0,8,1), col="grey100");
barplot( prawdopo[,3], las=1 , add=T, col="black")
box( col = "grey90")
text( rozklad.p6, prawdopo[,3]+1.5*10^5, labels = prawdopo[,3],cex=1.3)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
